//https://leetcode.com/problems/permutation-in-string/
//Given two strings s1 and s2, write a function to return true if s2 contains the permutation of s1. In other words, one of the first string's permutations is the substring of the second string.
Example 1:
Input: s1 = "ab" s2 = "eidbaooo"
Output: True
Explanation: s2 contains one permutation of s1 ("ba").


---------------------------------------------------------------//Pseudo-code//----------------------------------------------------------
class Solution {
public:
    bool checkInclusion(string s1, string s2) {
        vector<int>c(26,0);
        int count = s1.size();
        
        for(int i=0;i<s1.size();i++){
            c[s1[i]-'a']++;
        }
        
        int left = 0;
        int right = 0;
        
        while(right<s2.size()){
        
            if(c[s2[right++]-'a']-->=1){
                count--;
            }
            
            if(count==0){
                return true;
            }
            
            if(right-left==s1.size() && c[s2[left++]-'a']++>=0){
                count++;
            }
        }
        return false;
    }
};
